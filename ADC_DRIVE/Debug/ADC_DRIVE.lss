
ADC_DRIVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a6a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b58  00000000  00000000  00000ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000008a8  00000000  00000000  00001618  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 9d 04 	call	0x93a	; 0x93a <main>
  64:	0c 94 33 05 	jmp	0xa66	; 0xa66 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <ADC_VidInit>:
#include "ADC_PRIV.h"
#include "ADC_INT.h"
#include "ADC_CFG.h"
#include "BIT_MATH.h"
void ADC_VidInit(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	//b5tar a3ml AREF azay turrned off wla Vcc
	ADMUX|=REF_SEL;
  74:	a7 e2       	ldi	r26, 0x27	; 39
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e7 e2       	ldi	r30, 0x27	; 39
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	8c 93       	st	X, r24

	ADCSRA|=(PRESCALER_SEL|ADEN);
  80:	a6 e2       	ldi	r26, 0x26	; 38
  82:	b0 e0       	ldi	r27, 0x00	; 0
  84:	e6 e2       	ldi	r30, 0x26	; 38
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	80 81       	ld	r24, Z
  8a:	80 68       	ori	r24, 0x80	; 128
  8c:	8c 93       	st	X, r24
}
  8e:	cf 91       	pop	r28
  90:	df 91       	pop	r29
  92:	08 95       	ret

00000094 <ADC_u16GetAdValue>:
u16 ADC_u16GetAdValue(u8 u8ChannelId)
{
  94:	df 93       	push	r29
  96:	cf 93       	push	r28
  98:	0f 92       	push	r0
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	89 83       	std	Y+1, r24	; 0x01
	ADMUX=(ADMUX&~(0x1F))|(u8ChannelId);
  a0:	a7 e2       	ldi	r26, 0x27	; 39
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	e7 e2       	ldi	r30, 0x27	; 39
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	98 2f       	mov	r25, r24
  ac:	90 7e       	andi	r25, 0xE0	; 224
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	89 2b       	or	r24, r25
  b2:	8c 93       	st	X, r24
	ADCSRA|=ADSC;
  b4:	a6 e2       	ldi	r26, 0x26	; 38
  b6:	b0 e0       	ldi	r27, 0x00	; 0
  b8:	e6 e2       	ldi	r30, 0x26	; 38
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	8c 93       	st	X, r24
	while(GET_BIT(ADCSRA,ADIF)==0);
  c2:	e6 e2       	ldi	r30, 0x26	; 38
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	82 95       	swap	r24
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	88 2f       	mov	r24, r24
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	81 70       	andi	r24, 0x01	; 1
  d2:	90 70       	andi	r25, 0x00	; 0
  d4:	00 97       	sbiw	r24, 0x00	; 0
  d6:	a9 f3       	breq	.-22     	; 0xc2 <ADC_u16GetAdValue+0x2e>
	SET_BIT(ADCSRA,ADIF);//clearing ADIF by putting logical one on it 3shan lama yrg3 tany yb2a zero w ystna lahd ma tgelo l value l sa7
  d8:	a6 e2       	ldi	r26, 0x26	; 38
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	e6 e2       	ldi	r30, 0x26	; 38
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	80 61       	ori	r24, 0x10	; 16
  e4:	8c 93       	st	X, r24
	return ADC;
  e6:	e4 e2       	ldi	r30, 0x24	; 36
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	91 81       	ldd	r25, Z+1	; 0x01
}
  ee:	0f 90       	pop	r0
  f0:	cf 91       	pop	r28
  f2:	df 91       	pop	r29
  f4:	08 95       	ret

000000f6 <DIO_vidSetPinDir>:
#include "DIO_INT.h"
#include "DIO_PRIV.h"
#include "BIT_MATH.h"

void DIO_vidSetPinDir(u8 u8PortId,u8 u8PinId,u8 u8Dir)
{
  f6:	df 93       	push	r29
  f8:	cf 93       	push	r28
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	27 97       	sbiw	r28, 0x07	; 7
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	f8 94       	cli
 104:	de bf       	out	0x3e, r29	; 62
 106:	0f be       	out	0x3f, r0	; 63
 108:	cd bf       	out	0x3d, r28	; 61
 10a:	89 83       	std	Y+1, r24	; 0x01
 10c:	6a 83       	std	Y+2, r22	; 0x02
 10e:	4b 83       	std	Y+3, r20	; 0x03

	if((u8PortId<=PORTD) && (u8PinId<=PIN7))
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	84 30       	cpi	r24, 0x04	; 4
 114:	08 f0       	brcs	.+2      	; 0x118 <DIO_vidSetPinDir+0x22>
 116:	ee c0       	rjmp	.+476    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
 118:	8a 81       	ldd	r24, Y+2	; 0x02
 11a:	88 30       	cpi	r24, 0x08	; 8
 11c:	08 f0       	brcs	.+2      	; 0x120 <DIO_vidSetPinDir+0x2a>
 11e:	ea c0       	rjmp	.+468    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
	{
		//law 3ayzen n set l pit direction
	if(u8Dir== INPUT)
 120:	8b 81       	ldd	r24, Y+3	; 0x03
 122:	88 23       	and	r24, r24
 124:	09 f0       	breq	.+2      	; 0x128 <DIO_vidSetPinDir+0x32>
 126:	74 c0       	rjmp	.+232    	; 0x210 <DIO_vidSetPinDir+0x11a>
		{
		switch (u8PortId)
 128:	89 81       	ldd	r24, Y+1	; 0x01
 12a:	28 2f       	mov	r18, r24
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	3f 83       	std	Y+7, r19	; 0x07
 130:	2e 83       	std	Y+6, r18	; 0x06
 132:	8e 81       	ldd	r24, Y+6	; 0x06
 134:	9f 81       	ldd	r25, Y+7	; 0x07
 136:	81 30       	cpi	r24, 0x01	; 1
 138:	91 05       	cpc	r25, r1
 13a:	59 f1       	breq	.+86     	; 0x192 <DIO_vidSetPinDir+0x9c>
 13c:	2e 81       	ldd	r18, Y+6	; 0x06
 13e:	3f 81       	ldd	r19, Y+7	; 0x07
 140:	22 30       	cpi	r18, 0x02	; 2
 142:	31 05       	cpc	r19, r1
 144:	2c f4       	brge	.+10     	; 0x150 <DIO_vidSetPinDir+0x5a>
 146:	8e 81       	ldd	r24, Y+6	; 0x06
 148:	9f 81       	ldd	r25, Y+7	; 0x07
 14a:	00 97       	sbiw	r24, 0x00	; 0
 14c:	69 f0       	breq	.+26     	; 0x168 <DIO_vidSetPinDir+0x72>
 14e:	d2 c0       	rjmp	.+420    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
 150:	2e 81       	ldd	r18, Y+6	; 0x06
 152:	3f 81       	ldd	r19, Y+7	; 0x07
 154:	22 30       	cpi	r18, 0x02	; 2
 156:	31 05       	cpc	r19, r1
 158:	89 f1       	breq	.+98     	; 0x1bc <DIO_vidSetPinDir+0xc6>
 15a:	8e 81       	ldd	r24, Y+6	; 0x06
 15c:	9f 81       	ldd	r25, Y+7	; 0x07
 15e:	83 30       	cpi	r24, 0x03	; 3
 160:	91 05       	cpc	r25, r1
 162:	09 f4       	brne	.+2      	; 0x166 <DIO_vidSetPinDir+0x70>
 164:	40 c0       	rjmp	.+128    	; 0x1e6 <DIO_vidSetPinDir+0xf0>
 166:	c6 c0       	rjmp	.+396    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
			{
				case PORTA:CLR_BIT(DDRA_reg,u8PinId);
 168:	aa e3       	ldi	r26, 0x3A	; 58
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	ea e3       	ldi	r30, 0x3A	; 58
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_vidSetPinDir+0x90>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_vidSetPinDir+0x8c>
 18a:	80 95       	com	r24
 18c:	84 23       	and	r24, r20
 18e:	8c 93       	st	X, r24
 190:	b1 c0       	rjmp	.+354    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTB:CLR_BIT(DDRB_reg,u8PinId);
 192:	a7 e3       	ldi	r26, 0x37	; 55
 194:	b0 e0       	ldi	r27, 0x00	; 0
 196:	e7 e3       	ldi	r30, 0x37	; 55
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	48 2f       	mov	r20, r24
 19e:	8a 81       	ldd	r24, Y+2	; 0x02
 1a0:	28 2f       	mov	r18, r24
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 2e       	mov	r0, r18
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_vidSetPinDir+0xba>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	0a 94       	dec	r0
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_vidSetPinDir+0xb6>
 1b4:	80 95       	com	r24
 1b6:	84 23       	and	r24, r20
 1b8:	8c 93       	st	X, r24
 1ba:	9c c0       	rjmp	.+312    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTC:CLR_BIT(DDRC_reg,u8PinId);
 1bc:	a4 e3       	ldi	r26, 0x34	; 52
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	e4 e3       	ldi	r30, 0x34	; 52
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	48 2f       	mov	r20, r24
 1c8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ca:	28 2f       	mov	r18, r24
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 2e       	mov	r0, r18
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_vidSetPinDir+0xe4>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_vidSetPinDir+0xe0>
 1de:	80 95       	com	r24
 1e0:	84 23       	and	r24, r20
 1e2:	8c 93       	st	X, r24
 1e4:	87 c0       	rjmp	.+270    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTD:CLR_BIT(DDRD_reg,u8PinId);
 1e6:	a1 e3       	ldi	r26, 0x31	; 49
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	e1 e3       	ldi	r30, 0x31	; 49
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	48 2f       	mov	r20, r24
 1f2:	8a 81       	ldd	r24, Y+2	; 0x02
 1f4:	28 2f       	mov	r18, r24
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 2e       	mov	r0, r18
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_vidSetPinDir+0x10e>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	0a 94       	dec	r0
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_vidSetPinDir+0x10a>
 208:	80 95       	com	r24
 20a:	84 23       	and	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	72 c0       	rjmp	.+228    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
			}
		}
	else if(u8Dir==OUTPUT)
 210:	8b 81       	ldd	r24, Y+3	; 0x03
 212:	8f 3f       	cpi	r24, 0xFF	; 255
 214:	09 f0       	breq	.+2      	; 0x218 <DIO_vidSetPinDir+0x122>
 216:	6e c0       	rjmp	.+220    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
			{
		switch (u8PortId)
 218:	89 81       	ldd	r24, Y+1	; 0x01
 21a:	28 2f       	mov	r18, r24
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	3d 83       	std	Y+5, r19	; 0x05
 220:	2c 83       	std	Y+4, r18	; 0x04
 222:	8c 81       	ldd	r24, Y+4	; 0x04
 224:	9d 81       	ldd	r25, Y+5	; 0x05
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	91 05       	cpc	r25, r1
 22a:	49 f1       	breq	.+82     	; 0x27e <DIO_vidSetPinDir+0x188>
 22c:	2c 81       	ldd	r18, Y+4	; 0x04
 22e:	3d 81       	ldd	r19, Y+5	; 0x05
 230:	22 30       	cpi	r18, 0x02	; 2
 232:	31 05       	cpc	r19, r1
 234:	2c f4       	brge	.+10     	; 0x240 <DIO_vidSetPinDir+0x14a>
 236:	8c 81       	ldd	r24, Y+4	; 0x04
 238:	9d 81       	ldd	r25, Y+5	; 0x05
 23a:	00 97       	sbiw	r24, 0x00	; 0
 23c:	61 f0       	breq	.+24     	; 0x256 <DIO_vidSetPinDir+0x160>
 23e:	5a c0       	rjmp	.+180    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
 240:	2c 81       	ldd	r18, Y+4	; 0x04
 242:	3d 81       	ldd	r19, Y+5	; 0x05
 244:	22 30       	cpi	r18, 0x02	; 2
 246:	31 05       	cpc	r19, r1
 248:	71 f1       	breq	.+92     	; 0x2a6 <DIO_vidSetPinDir+0x1b0>
 24a:	8c 81       	ldd	r24, Y+4	; 0x04
 24c:	9d 81       	ldd	r25, Y+5	; 0x05
 24e:	83 30       	cpi	r24, 0x03	; 3
 250:	91 05       	cpc	r25, r1
 252:	e9 f1       	breq	.+122    	; 0x2ce <DIO_vidSetPinDir+0x1d8>
 254:	4f c0       	rjmp	.+158    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
					{
				case PORTA:SET_BIT(DDRA_reg,u8PinId);
 256:	aa e3       	ldi	r26, 0x3A	; 58
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	ea e3       	ldi	r30, 0x3A	; 58
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	48 2f       	mov	r20, r24
 262:	8a 81       	ldd	r24, Y+2	; 0x02
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 2e       	mov	r0, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_vidSetPinDir+0x17e>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_vidSetPinDir+0x17a>
 278:	84 2b       	or	r24, r20
 27a:	8c 93       	st	X, r24
 27c:	3b c0       	rjmp	.+118    	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTB:SET_BIT(DDRB_reg,u8PinId);
 27e:	a7 e3       	ldi	r26, 0x37	; 55
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	e7 e3       	ldi	r30, 0x37	; 55
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	48 2f       	mov	r20, r24
 28a:	8a 81       	ldd	r24, Y+2	; 0x02
 28c:	28 2f       	mov	r18, r24
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 2e       	mov	r0, r18
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_vidSetPinDir+0x1a6>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	0a 94       	dec	r0
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_vidSetPinDir+0x1a2>
 2a0:	84 2b       	or	r24, r20
 2a2:	8c 93       	st	X, r24
 2a4:	27 c0       	rjmp	.+78     	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTC:SET_BIT(DDRC_reg,u8PinId);
 2a6:	a4 e3       	ldi	r26, 0x34	; 52
 2a8:	b0 e0       	ldi	r27, 0x00	; 0
 2aa:	e4 e3       	ldi	r30, 0x34	; 52
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	48 2f       	mov	r20, r24
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 2e       	mov	r0, r18
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_vidSetPinDir+0x1ce>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	0a 94       	dec	r0
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_vidSetPinDir+0x1ca>
 2c8:	84 2b       	or	r24, r20
 2ca:	8c 93       	st	X, r24
 2cc:	13 c0       	rjmp	.+38     	; 0x2f4 <DIO_vidSetPinDir+0x1fe>
				break;
				case PORTD:SET_BIT(DDRD_reg,u8PinId);
 2ce:	a1 e3       	ldi	r26, 0x31	; 49
 2d0:	b0 e0       	ldi	r27, 0x00	; 0
 2d2:	e1 e3       	ldi	r30, 0x31	; 49
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	48 2f       	mov	r20, r24
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	28 2f       	mov	r18, r24
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	02 2e       	mov	r0, r18
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_vidSetPinDir+0x1f6>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	0a 94       	dec	r0
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_vidSetPinDir+0x1f2>
 2f0:	84 2b       	or	r24, r20
 2f2:	8c 93       	st	X, r24
	else
			{
				//wrong input Direction
			}
		}
	}
 2f4:	27 96       	adiw	r28, 0x07	; 7
 2f6:	0f b6       	in	r0, 0x3f	; 63
 2f8:	f8 94       	cli
 2fa:	de bf       	out	0x3e, r29	; 62
 2fc:	0f be       	out	0x3f, r0	; 63
 2fe:	cd bf       	out	0x3d, r28	; 61
 300:	cf 91       	pop	r28
 302:	df 91       	pop	r29
 304:	08 95       	ret

00000306 <DIO_vidSetPinVal>:

void DIO_vidSetPinVal(u8 u8PortId, u8 u8PinId,u8 u8Val)
{
 306:	df 93       	push	r29
 308:	cf 93       	push	r28
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	27 97       	sbiw	r28, 0x07	; 7
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	89 83       	std	Y+1, r24	; 0x01
 31c:	6a 83       	std	Y+2, r22	; 0x02
 31e:	4b 83       	std	Y+3, r20	; 0x03
	if((u8PortId<=PORTD) && (u8PinId<=PIN7))
 320:	89 81       	ldd	r24, Y+1	; 0x01
 322:	84 30       	cpi	r24, 0x04	; 4
 324:	08 f0       	brcs	.+2      	; 0x328 <DIO_vidSetPinVal+0x22>
 326:	ee c0       	rjmp	.+476    	; 0x504 <DIO_vidSetPinVal+0x1fe>
 328:	8a 81       	ldd	r24, Y+2	; 0x02
 32a:	88 30       	cpi	r24, 0x08	; 8
 32c:	08 f0       	brcs	.+2      	; 0x330 <DIO_vidSetPinVal+0x2a>
 32e:	ea c0       	rjmp	.+468    	; 0x504 <DIO_vidSetPinVal+0x1fe>
		{
			//law 3ayzen n set l pit direction
		if(u8Val== HIGH)
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	8f 3f       	cpi	r24, 0xFF	; 255
 334:	09 f0       	breq	.+2      	; 0x338 <DIO_vidSetPinVal+0x32>
 336:	6f c0       	rjmp	.+222    	; 0x416 <DIO_vidSetPinVal+0x110>
			{
			switch (u8PortId)
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	3f 83       	std	Y+7, r19	; 0x07
 340:	2e 83       	std	Y+6, r18	; 0x06
 342:	8e 81       	ldd	r24, Y+6	; 0x06
 344:	9f 81       	ldd	r25, Y+7	; 0x07
 346:	81 30       	cpi	r24, 0x01	; 1
 348:	91 05       	cpc	r25, r1
 34a:	49 f1       	breq	.+82     	; 0x39e <DIO_vidSetPinVal+0x98>
 34c:	2e 81       	ldd	r18, Y+6	; 0x06
 34e:	3f 81       	ldd	r19, Y+7	; 0x07
 350:	22 30       	cpi	r18, 0x02	; 2
 352:	31 05       	cpc	r19, r1
 354:	2c f4       	brge	.+10     	; 0x360 <DIO_vidSetPinVal+0x5a>
 356:	8e 81       	ldd	r24, Y+6	; 0x06
 358:	9f 81       	ldd	r25, Y+7	; 0x07
 35a:	00 97       	sbiw	r24, 0x00	; 0
 35c:	61 f0       	breq	.+24     	; 0x376 <DIO_vidSetPinVal+0x70>
 35e:	d2 c0       	rjmp	.+420    	; 0x504 <DIO_vidSetPinVal+0x1fe>
 360:	2e 81       	ldd	r18, Y+6	; 0x06
 362:	3f 81       	ldd	r19, Y+7	; 0x07
 364:	22 30       	cpi	r18, 0x02	; 2
 366:	31 05       	cpc	r19, r1
 368:	71 f1       	breq	.+92     	; 0x3c6 <DIO_vidSetPinVal+0xc0>
 36a:	8e 81       	ldd	r24, Y+6	; 0x06
 36c:	9f 81       	ldd	r25, Y+7	; 0x07
 36e:	83 30       	cpi	r24, 0x03	; 3
 370:	91 05       	cpc	r25, r1
 372:	e9 f1       	breq	.+122    	; 0x3ee <DIO_vidSetPinVal+0xe8>
 374:	c7 c0       	rjmp	.+398    	; 0x504 <DIO_vidSetPinVal+0x1fe>
				{
					case PORTA:SET_BIT(PORTA_reg,u8PinId);
 376:	ab e3       	ldi	r26, 0x3B	; 59
 378:	b0 e0       	ldi	r27, 0x00	; 0
 37a:	eb e3       	ldi	r30, 0x3B	; 59
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	80 81       	ld	r24, Z
 380:	48 2f       	mov	r20, r24
 382:	8a 81       	ldd	r24, Y+2	; 0x02
 384:	28 2f       	mov	r18, r24
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 2e       	mov	r0, r18
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_vidSetPinVal+0x8e>
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	0a 94       	dec	r0
 396:	e2 f7       	brpl	.-8      	; 0x390 <DIO_vidSetPinVal+0x8a>
 398:	84 2b       	or	r24, r20
 39a:	8c 93       	st	X, r24
 39c:	b3 c0       	rjmp	.+358    	; 0x504 <DIO_vidSetPinVal+0x1fe>
					break;
					case PORTB:SET_BIT(PORTB_reg,u8PinId);
 39e:	a8 e3       	ldi	r26, 0x38	; 56
 3a0:	b0 e0       	ldi	r27, 0x00	; 0
 3a2:	e8 e3       	ldi	r30, 0x38	; 56
 3a4:	f0 e0       	ldi	r31, 0x00	; 0
 3a6:	80 81       	ld	r24, Z
 3a8:	48 2f       	mov	r20, r24
 3aa:	8a 81       	ldd	r24, Y+2	; 0x02
 3ac:	28 2f       	mov	r18, r24
 3ae:	30 e0       	ldi	r19, 0x00	; 0
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	02 2e       	mov	r0, r18
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <DIO_vidSetPinVal+0xb6>
 3b8:	88 0f       	add	r24, r24
 3ba:	99 1f       	adc	r25, r25
 3bc:	0a 94       	dec	r0
 3be:	e2 f7       	brpl	.-8      	; 0x3b8 <DIO_vidSetPinVal+0xb2>
 3c0:	84 2b       	or	r24, r20
 3c2:	8c 93       	st	X, r24
 3c4:	9f c0       	rjmp	.+318    	; 0x504 <DIO_vidSetPinVal+0x1fe>
					break;
					case PORTC:SET_BIT(PORTC_reg,u8PinId);
 3c6:	a5 e3       	ldi	r26, 0x35	; 53
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	e5 e3       	ldi	r30, 0x35	; 53
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	48 2f       	mov	r20, r24
 3d2:	8a 81       	ldd	r24, Y+2	; 0x02
 3d4:	28 2f       	mov	r18, r24
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	02 2e       	mov	r0, r18
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_vidSetPinVal+0xde>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	0a 94       	dec	r0
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_vidSetPinVal+0xda>
 3e8:	84 2b       	or	r24, r20
 3ea:	8c 93       	st	X, r24
 3ec:	8b c0       	rjmp	.+278    	; 0x504 <DIO_vidSetPinVal+0x1fe>
					break;
					case PORTD:SET_BIT(PORTD_reg,u8PinId);
 3ee:	a2 e3       	ldi	r26, 0x32	; 50
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e2 e3       	ldi	r30, 0x32	; 50
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <DIO_vidSetPinVal+0x106>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <DIO_vidSetPinVal+0x102>
 410:	84 2b       	or	r24, r20
 412:	8c 93       	st	X, r24
 414:	77 c0       	rjmp	.+238    	; 0x504 <DIO_vidSetPinVal+0x1fe>
					break;
				}
			}
		else if(u8Val==LOW)
 416:	8b 81       	ldd	r24, Y+3	; 0x03
 418:	88 23       	and	r24, r24
 41a:	09 f0       	breq	.+2      	; 0x41e <DIO_vidSetPinVal+0x118>
 41c:	73 c0       	rjmp	.+230    	; 0x504 <DIO_vidSetPinVal+0x1fe>
				{
			switch (u8PortId)
 41e:	89 81       	ldd	r24, Y+1	; 0x01
 420:	28 2f       	mov	r18, r24
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	3d 83       	std	Y+5, r19	; 0x05
 426:	2c 83       	std	Y+4, r18	; 0x04
 428:	8c 81       	ldd	r24, Y+4	; 0x04
 42a:	9d 81       	ldd	r25, Y+5	; 0x05
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	91 05       	cpc	r25, r1
 430:	59 f1       	breq	.+86     	; 0x488 <DIO_vidSetPinVal+0x182>
 432:	2c 81       	ldd	r18, Y+4	; 0x04
 434:	3d 81       	ldd	r19, Y+5	; 0x05
 436:	22 30       	cpi	r18, 0x02	; 2
 438:	31 05       	cpc	r19, r1
 43a:	2c f4       	brge	.+10     	; 0x446 <DIO_vidSetPinVal+0x140>
 43c:	8c 81       	ldd	r24, Y+4	; 0x04
 43e:	9d 81       	ldd	r25, Y+5	; 0x05
 440:	00 97       	sbiw	r24, 0x00	; 0
 442:	69 f0       	breq	.+26     	; 0x45e <DIO_vidSetPinVal+0x158>
 444:	5f c0       	rjmp	.+190    	; 0x504 <DIO_vidSetPinVal+0x1fe>
 446:	2c 81       	ldd	r18, Y+4	; 0x04
 448:	3d 81       	ldd	r19, Y+5	; 0x05
 44a:	22 30       	cpi	r18, 0x02	; 2
 44c:	31 05       	cpc	r19, r1
 44e:	89 f1       	breq	.+98     	; 0x4b2 <DIO_vidSetPinVal+0x1ac>
 450:	8c 81       	ldd	r24, Y+4	; 0x04
 452:	9d 81       	ldd	r25, Y+5	; 0x05
 454:	83 30       	cpi	r24, 0x03	; 3
 456:	91 05       	cpc	r25, r1
 458:	09 f4       	brne	.+2      	; 0x45c <DIO_vidSetPinVal+0x156>
 45a:	40 c0       	rjmp	.+128    	; 0x4dc <DIO_vidSetPinVal+0x1d6>
 45c:	53 c0       	rjmp	.+166    	; 0x504 <DIO_vidSetPinVal+0x1fe>
					{
						case PORTA:CLR_BIT(PORTA_reg,u8PinId);
 45e:	ab e3       	ldi	r26, 0x3B	; 59
 460:	b0 e0       	ldi	r27, 0x00	; 0
 462:	eb e3       	ldi	r30, 0x3B	; 59
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	80 81       	ld	r24, Z
 468:	48 2f       	mov	r20, r24
 46a:	8a 81       	ldd	r24, Y+2	; 0x02
 46c:	28 2f       	mov	r18, r24
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	02 2e       	mov	r0, r18
 476:	02 c0       	rjmp	.+4      	; 0x47c <DIO_vidSetPinVal+0x176>
 478:	88 0f       	add	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	0a 94       	dec	r0
 47e:	e2 f7       	brpl	.-8      	; 0x478 <DIO_vidSetPinVal+0x172>
 480:	80 95       	com	r24
 482:	84 23       	and	r24, r20
 484:	8c 93       	st	X, r24
 486:	3e c0       	rjmp	.+124    	; 0x504 <DIO_vidSetPinVal+0x1fe>
						break;
						case PORTB:CLR_BIT(PORTB_reg,u8PinId);
 488:	a8 e3       	ldi	r26, 0x38	; 56
 48a:	b0 e0       	ldi	r27, 0x00	; 0
 48c:	e8 e3       	ldi	r30, 0x38	; 56
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	80 81       	ld	r24, Z
 492:	48 2f       	mov	r20, r24
 494:	8a 81       	ldd	r24, Y+2	; 0x02
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 2e       	mov	r0, r18
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <DIO_vidSetPinVal+0x1a0>
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	0a 94       	dec	r0
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <DIO_vidSetPinVal+0x19c>
 4aa:	80 95       	com	r24
 4ac:	84 23       	and	r24, r20
 4ae:	8c 93       	st	X, r24
 4b0:	29 c0       	rjmp	.+82     	; 0x504 <DIO_vidSetPinVal+0x1fe>
						break;
						case PORTC:CLR_BIT(PORTC_reg,u8PinId);
 4b2:	a5 e3       	ldi	r26, 0x35	; 53
 4b4:	b0 e0       	ldi	r27, 0x00	; 0
 4b6:	e5 e3       	ldi	r30, 0x35	; 53
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	80 81       	ld	r24, Z
 4bc:	48 2f       	mov	r20, r24
 4be:	8a 81       	ldd	r24, Y+2	; 0x02
 4c0:	28 2f       	mov	r18, r24
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	02 2e       	mov	r0, r18
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <DIO_vidSetPinVal+0x1ca>
 4cc:	88 0f       	add	r24, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	0a 94       	dec	r0
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <DIO_vidSetPinVal+0x1c6>
 4d4:	80 95       	com	r24
 4d6:	84 23       	and	r24, r20
 4d8:	8c 93       	st	X, r24
 4da:	14 c0       	rjmp	.+40     	; 0x504 <DIO_vidSetPinVal+0x1fe>
						break;
						case PORTD:CLR_BIT(PORTD_reg,u8PinId);
 4dc:	a2 e3       	ldi	r26, 0x32	; 50
 4de:	b0 e0       	ldi	r27, 0x00	; 0
 4e0:	e2 e3       	ldi	r30, 0x32	; 50
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	80 81       	ld	r24, Z
 4e6:	48 2f       	mov	r20, r24
 4e8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ea:	28 2f       	mov	r18, r24
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	02 2e       	mov	r0, r18
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <DIO_vidSetPinVal+0x1f4>
 4f6:	88 0f       	add	r24, r24
 4f8:	99 1f       	adc	r25, r25
 4fa:	0a 94       	dec	r0
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <DIO_vidSetPinVal+0x1f0>
 4fe:	80 95       	com	r24
 500:	84 23       	and	r24, r20
 502:	8c 93       	st	X, r24
		else
				{
					//wrong input Direction
				}
			}
}
 504:	27 96       	adiw	r28, 0x07	; 7
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	f8 94       	cli
 50a:	de bf       	out	0x3e, r29	; 62
 50c:	0f be       	out	0x3f, r0	; 63
 50e:	cd bf       	out	0x3d, r28	; 61
 510:	cf 91       	pop	r28
 512:	df 91       	pop	r29
 514:	08 95       	ret

00000516 <DIO_u8GetPinVal>:

u8 DIO_u8GetPinVal(u8 u8PortId,u8 u8PinId)
{
 516:	df 93       	push	r29
 518:	cf 93       	push	r28
 51a:	00 d0       	rcall	.+0      	; 0x51c <DIO_u8GetPinVal+0x6>
 51c:	00 d0       	rcall	.+0      	; 0x51e <DIO_u8GetPinVal+0x8>
 51e:	0f 92       	push	r0
 520:	cd b7       	in	r28, 0x3d	; 61
 522:	de b7       	in	r29, 0x3e	; 62
 524:	8a 83       	std	Y+2, r24	; 0x02
 526:	6b 83       	std	Y+3, r22	; 0x03
	u8 u8PinVal=IN_UNDEF;
 528:	8f ef       	ldi	r24, 0xFF	; 255
 52a:	89 83       	std	Y+1, r24	; 0x01
	if((u8PortId<=PORTD) && (u8PinId<=PIN7))
 52c:	8a 81       	ldd	r24, Y+2	; 0x02
 52e:	84 30       	cpi	r24, 0x04	; 4
 530:	08 f0       	brcs	.+2      	; 0x534 <DIO_u8GetPinVal+0x1e>
 532:	6c c0       	rjmp	.+216    	; 0x60c <DIO_u8GetPinVal+0xf6>
 534:	8b 81       	ldd	r24, Y+3	; 0x03
 536:	88 30       	cpi	r24, 0x08	; 8
 538:	08 f0       	brcs	.+2      	; 0x53c <DIO_u8GetPinVal+0x26>
 53a:	68 c0       	rjmp	.+208    	; 0x60c <DIO_u8GetPinVal+0xf6>
		{

			switch (u8PortId)
 53c:	8a 81       	ldd	r24, Y+2	; 0x02
 53e:	28 2f       	mov	r18, r24
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	3d 83       	std	Y+5, r19	; 0x05
 544:	2c 83       	std	Y+4, r18	; 0x04
 546:	4c 81       	ldd	r20, Y+4	; 0x04
 548:	5d 81       	ldd	r21, Y+5	; 0x05
 54a:	41 30       	cpi	r20, 0x01	; 1
 54c:	51 05       	cpc	r21, r1
 54e:	41 f1       	breq	.+80     	; 0x5a0 <DIO_u8GetPinVal+0x8a>
 550:	8c 81       	ldd	r24, Y+4	; 0x04
 552:	9d 81       	ldd	r25, Y+5	; 0x05
 554:	82 30       	cpi	r24, 0x02	; 2
 556:	91 05       	cpc	r25, r1
 558:	34 f4       	brge	.+12     	; 0x566 <DIO_u8GetPinVal+0x50>
 55a:	2c 81       	ldd	r18, Y+4	; 0x04
 55c:	3d 81       	ldd	r19, Y+5	; 0x05
 55e:	21 15       	cp	r18, r1
 560:	31 05       	cpc	r19, r1
 562:	61 f0       	breq	.+24     	; 0x57c <DIO_u8GetPinVal+0x66>
 564:	55 c0       	rjmp	.+170    	; 0x610 <DIO_u8GetPinVal+0xfa>
 566:	4c 81       	ldd	r20, Y+4	; 0x04
 568:	5d 81       	ldd	r21, Y+5	; 0x05
 56a:	42 30       	cpi	r20, 0x02	; 2
 56c:	51 05       	cpc	r21, r1
 56e:	51 f1       	breq	.+84     	; 0x5c4 <DIO_u8GetPinVal+0xae>
 570:	8c 81       	ldd	r24, Y+4	; 0x04
 572:	9d 81       	ldd	r25, Y+5	; 0x05
 574:	83 30       	cpi	r24, 0x03	; 3
 576:	91 05       	cpc	r25, r1
 578:	b9 f1       	breq	.+110    	; 0x5e8 <DIO_u8GetPinVal+0xd2>
 57a:	4a c0       	rjmp	.+148    	; 0x610 <DIO_u8GetPinVal+0xfa>
				{
					case PORTA:
						u8PinVal=GET_BIT(PINA_reg,u8PinId);
 57c:	e9 e3       	ldi	r30, 0x39	; 57
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	80 81       	ld	r24, Z
 582:	28 2f       	mov	r18, r24
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	8b 81       	ldd	r24, Y+3	; 0x03
 588:	88 2f       	mov	r24, r24
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	a9 01       	movw	r20, r18
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_u8GetPinVal+0x7e>
 590:	55 95       	asr	r21
 592:	47 95       	ror	r20
 594:	8a 95       	dec	r24
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_u8GetPinVal+0x7a>
 598:	ca 01       	movw	r24, r20
 59a:	81 70       	andi	r24, 0x01	; 1
 59c:	89 83       	std	Y+1, r24	; 0x01
 59e:	38 c0       	rjmp	.+112    	; 0x610 <DIO_u8GetPinVal+0xfa>
					break;
					case PORTB:
						u8PinVal=GET_BIT(PINB_reg,u8PinId);
 5a0:	e6 e3       	ldi	r30, 0x36	; 54
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	80 81       	ld	r24, Z
 5a6:	28 2f       	mov	r18, r24
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	8b 81       	ldd	r24, Y+3	; 0x03
 5ac:	88 2f       	mov	r24, r24
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	a9 01       	movw	r20, r18
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <DIO_u8GetPinVal+0xa2>
 5b4:	55 95       	asr	r21
 5b6:	47 95       	ror	r20
 5b8:	8a 95       	dec	r24
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <DIO_u8GetPinVal+0x9e>
 5bc:	ca 01       	movw	r24, r20
 5be:	81 70       	andi	r24, 0x01	; 1
 5c0:	89 83       	std	Y+1, r24	; 0x01
 5c2:	26 c0       	rjmp	.+76     	; 0x610 <DIO_u8GetPinVal+0xfa>

					break;
					case PORTC:
						u8PinVal=GET_BIT(PINC_reg,u8PinId);
 5c4:	e3 e3       	ldi	r30, 0x33	; 51
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	80 81       	ld	r24, Z
 5ca:	28 2f       	mov	r18, r24
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	8b 81       	ldd	r24, Y+3	; 0x03
 5d0:	88 2f       	mov	r24, r24
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	a9 01       	movw	r20, r18
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <DIO_u8GetPinVal+0xc6>
 5d8:	55 95       	asr	r21
 5da:	47 95       	ror	r20
 5dc:	8a 95       	dec	r24
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <DIO_u8GetPinVal+0xc2>
 5e0:	ca 01       	movw	r24, r20
 5e2:	81 70       	andi	r24, 0x01	; 1
 5e4:	89 83       	std	Y+1, r24	; 0x01
 5e6:	14 c0       	rjmp	.+40     	; 0x610 <DIO_u8GetPinVal+0xfa>

					break;
					case PORTD:
						u8PinVal=GET_BIT(PIND_reg,u8PinId);
 5e8:	e0 e3       	ldi	r30, 0x30	; 48
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	80 81       	ld	r24, Z
 5ee:	28 2f       	mov	r18, r24
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	8b 81       	ldd	r24, Y+3	; 0x03
 5f4:	88 2f       	mov	r24, r24
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	a9 01       	movw	r20, r18
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_u8GetPinVal+0xea>
 5fc:	55 95       	asr	r21
 5fe:	47 95       	ror	r20
 600:	8a 95       	dec	r24
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_u8GetPinVal+0xe6>
 604:	ca 01       	movw	r24, r20
 606:	81 70       	andi	r24, 0x01	; 1
 608:	89 83       	std	Y+1, r24	; 0x01
 60a:	02 c0       	rjmp	.+4      	; 0x610 <DIO_u8GetPinVal+0xfa>
			}

		else
				{
					//wrong input
				u8PinVal=IN_UNDEF;
 60c:	8f ef       	ldi	r24, 0xFF	; 255
 60e:	89 83       	std	Y+1, r24	; 0x01
				}
	return u8PinVal;
 610:	89 81       	ldd	r24, Y+1	; 0x01
}
 612:	0f 90       	pop	r0
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	cf 91       	pop	r28
 61e:	df 91       	pop	r29
 620:	08 95       	ret

00000622 <DIO_vidTogglePin>:

void DIO_vidTogglePin(u8 u8PortId,u8 u8PinId)
{
 622:	df 93       	push	r29
 624:	cf 93       	push	r28
 626:	00 d0       	rcall	.+0      	; 0x628 <DIO_vidTogglePin+0x6>
 628:	00 d0       	rcall	.+0      	; 0x62a <DIO_vidTogglePin+0x8>
 62a:	cd b7       	in	r28, 0x3d	; 61
 62c:	de b7       	in	r29, 0x3e	; 62
 62e:	89 83       	std	Y+1, r24	; 0x01
 630:	6a 83       	std	Y+2, r22	; 0x02
	if((u8PortId<=PORTD) && (u8PinId<=PIN7))
 632:	89 81       	ldd	r24, Y+1	; 0x01
 634:	84 30       	cpi	r24, 0x04	; 4
 636:	08 f0       	brcs	.+2      	; 0x63a <DIO_vidTogglePin+0x18>
 638:	72 c0       	rjmp	.+228    	; 0x71e <DIO_vidTogglePin+0xfc>
 63a:	8a 81       	ldd	r24, Y+2	; 0x02
 63c:	88 30       	cpi	r24, 0x08	; 8
 63e:	08 f0       	brcs	.+2      	; 0x642 <DIO_vidTogglePin+0x20>
 640:	6e c0       	rjmp	.+220    	; 0x71e <DIO_vidTogglePin+0xfc>
			{

				switch (u8PortId)//we need only to toggle port 3shan kda m7tag a3ml output 3ala PORT
 642:	89 81       	ldd	r24, Y+1	; 0x01
 644:	28 2f       	mov	r18, r24
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	3c 83       	std	Y+4, r19	; 0x04
 64a:	2b 83       	std	Y+3, r18	; 0x03
 64c:	8b 81       	ldd	r24, Y+3	; 0x03
 64e:	9c 81       	ldd	r25, Y+4	; 0x04
 650:	81 30       	cpi	r24, 0x01	; 1
 652:	91 05       	cpc	r25, r1
 654:	49 f1       	breq	.+82     	; 0x6a8 <DIO_vidTogglePin+0x86>
 656:	2b 81       	ldd	r18, Y+3	; 0x03
 658:	3c 81       	ldd	r19, Y+4	; 0x04
 65a:	22 30       	cpi	r18, 0x02	; 2
 65c:	31 05       	cpc	r19, r1
 65e:	2c f4       	brge	.+10     	; 0x66a <DIO_vidTogglePin+0x48>
 660:	8b 81       	ldd	r24, Y+3	; 0x03
 662:	9c 81       	ldd	r25, Y+4	; 0x04
 664:	00 97       	sbiw	r24, 0x00	; 0
 666:	61 f0       	breq	.+24     	; 0x680 <DIO_vidTogglePin+0x5e>
 668:	5a c0       	rjmp	.+180    	; 0x71e <DIO_vidTogglePin+0xfc>
 66a:	2b 81       	ldd	r18, Y+3	; 0x03
 66c:	3c 81       	ldd	r19, Y+4	; 0x04
 66e:	22 30       	cpi	r18, 0x02	; 2
 670:	31 05       	cpc	r19, r1
 672:	71 f1       	breq	.+92     	; 0x6d0 <DIO_vidTogglePin+0xae>
 674:	8b 81       	ldd	r24, Y+3	; 0x03
 676:	9c 81       	ldd	r25, Y+4	; 0x04
 678:	83 30       	cpi	r24, 0x03	; 3
 67a:	91 05       	cpc	r25, r1
 67c:	e9 f1       	breq	.+122    	; 0x6f8 <DIO_vidTogglePin+0xd6>
 67e:	4f c0       	rjmp	.+158    	; 0x71e <DIO_vidTogglePin+0xfc>
					{
						case PORTA:
						TOG_BIT(PORTA_reg,u8PinId);
 680:	ab e3       	ldi	r26, 0x3B	; 59
 682:	b0 e0       	ldi	r27, 0x00	; 0
 684:	eb e3       	ldi	r30, 0x3B	; 59
 686:	f0 e0       	ldi	r31, 0x00	; 0
 688:	80 81       	ld	r24, Z
 68a:	48 2f       	mov	r20, r24
 68c:	8a 81       	ldd	r24, Y+2	; 0x02
 68e:	28 2f       	mov	r18, r24
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	81 e0       	ldi	r24, 0x01	; 1
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	02 2e       	mov	r0, r18
 698:	02 c0       	rjmp	.+4      	; 0x69e <DIO_vidTogglePin+0x7c>
 69a:	88 0f       	add	r24, r24
 69c:	99 1f       	adc	r25, r25
 69e:	0a 94       	dec	r0
 6a0:	e2 f7       	brpl	.-8      	; 0x69a <DIO_vidTogglePin+0x78>
 6a2:	84 27       	eor	r24, r20
 6a4:	8c 93       	st	X, r24
 6a6:	3b c0       	rjmp	.+118    	; 0x71e <DIO_vidTogglePin+0xfc>
						break;
						case PORTB:
							TOG_BIT(PORTB_reg,u8PinId);
 6a8:	a8 e3       	ldi	r26, 0x38	; 56
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	e8 e3       	ldi	r30, 0x38	; 56
 6ae:	f0 e0       	ldi	r31, 0x00	; 0
 6b0:	80 81       	ld	r24, Z
 6b2:	48 2f       	mov	r20, r24
 6b4:	8a 81       	ldd	r24, Y+2	; 0x02
 6b6:	28 2f       	mov	r18, r24
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	02 2e       	mov	r0, r18
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <DIO_vidTogglePin+0xa4>
 6c2:	88 0f       	add	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	0a 94       	dec	r0
 6c8:	e2 f7       	brpl	.-8      	; 0x6c2 <DIO_vidTogglePin+0xa0>
 6ca:	84 27       	eor	r24, r20
 6cc:	8c 93       	st	X, r24
 6ce:	27 c0       	rjmp	.+78     	; 0x71e <DIO_vidTogglePin+0xfc>
						break;
						case PORTC:
							TOG_BIT(PORTC_reg,u8PinId);
 6d0:	a5 e3       	ldi	r26, 0x35	; 53
 6d2:	b0 e0       	ldi	r27, 0x00	; 0
 6d4:	e5 e3       	ldi	r30, 0x35	; 53
 6d6:	f0 e0       	ldi	r31, 0x00	; 0
 6d8:	80 81       	ld	r24, Z
 6da:	48 2f       	mov	r20, r24
 6dc:	8a 81       	ldd	r24, Y+2	; 0x02
 6de:	28 2f       	mov	r18, r24
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	02 2e       	mov	r0, r18
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <DIO_vidTogglePin+0xcc>
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	0a 94       	dec	r0
 6f0:	e2 f7       	brpl	.-8      	; 0x6ea <DIO_vidTogglePin+0xc8>
 6f2:	84 27       	eor	r24, r20
 6f4:	8c 93       	st	X, r24
 6f6:	13 c0       	rjmp	.+38     	; 0x71e <DIO_vidTogglePin+0xfc>
						break;
						case PORTD:
							TOG_BIT(PORTD_reg,u8PinId);
 6f8:	a2 e3       	ldi	r26, 0x32	; 50
 6fa:	b0 e0       	ldi	r27, 0x00	; 0
 6fc:	e2 e3       	ldi	r30, 0x32	; 50
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	48 2f       	mov	r20, r24
 704:	8a 81       	ldd	r24, Y+2	; 0x02
 706:	28 2f       	mov	r18, r24
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 2e       	mov	r0, r18
 710:	02 c0       	rjmp	.+4      	; 0x716 <DIO_vidTogglePin+0xf4>
 712:	88 0f       	add	r24, r24
 714:	99 1f       	adc	r25, r25
 716:	0a 94       	dec	r0
 718:	e2 f7       	brpl	.-8      	; 0x712 <DIO_vidTogglePin+0xf0>
 71a:	84 27       	eor	r24, r20
 71c:	8c 93       	st	X, r24
					{
						//wrong input Direction
					}


}
 71e:	0f 90       	pop	r0
 720:	0f 90       	pop	r0
 722:	0f 90       	pop	r0
 724:	0f 90       	pop	r0
 726:	cf 91       	pop	r28
 728:	df 91       	pop	r29
 72a:	08 95       	ret

0000072c <DIO_vidEnablePullUpRes>:

void DIO_vidEnablePullUpRes(u8 u8PortId,u8 u8PinId)
{
 72c:	df 93       	push	r29
 72e:	cf 93       	push	r28
 730:	00 d0       	rcall	.+0      	; 0x732 <DIO_vidEnablePullUpRes+0x6>
 732:	00 d0       	rcall	.+0      	; 0x734 <DIO_vidEnablePullUpRes+0x8>
 734:	cd b7       	in	r28, 0x3d	; 61
 736:	de b7       	in	r29, 0x3e	; 62
 738:	89 83       	std	Y+1, r24	; 0x01
 73a:	6a 83       	std	Y+2, r22	; 0x02
	if((u8PortId<=PORTD) && (u8PinId<=PIN7))
 73c:	89 81       	ldd	r24, Y+1	; 0x01
 73e:	84 30       	cpi	r24, 0x04	; 4
 740:	08 f0       	brcs	.+2      	; 0x744 <DIO_vidEnablePullUpRes+0x18>
 742:	72 c0       	rjmp	.+228    	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
 744:	8a 81       	ldd	r24, Y+2	; 0x02
 746:	88 30       	cpi	r24, 0x08	; 8
 748:	08 f0       	brcs	.+2      	; 0x74c <DIO_vidEnablePullUpRes+0x20>
 74a:	6e c0       	rjmp	.+220    	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
			{
				//law 3ayzen n set l pit direction

				switch (u8PortId)
 74c:	89 81       	ldd	r24, Y+1	; 0x01
 74e:	28 2f       	mov	r18, r24
 750:	30 e0       	ldi	r19, 0x00	; 0
 752:	3c 83       	std	Y+4, r19	; 0x04
 754:	2b 83       	std	Y+3, r18	; 0x03
 756:	8b 81       	ldd	r24, Y+3	; 0x03
 758:	9c 81       	ldd	r25, Y+4	; 0x04
 75a:	81 30       	cpi	r24, 0x01	; 1
 75c:	91 05       	cpc	r25, r1
 75e:	49 f1       	breq	.+82     	; 0x7b2 <DIO_vidEnablePullUpRes+0x86>
 760:	2b 81       	ldd	r18, Y+3	; 0x03
 762:	3c 81       	ldd	r19, Y+4	; 0x04
 764:	22 30       	cpi	r18, 0x02	; 2
 766:	31 05       	cpc	r19, r1
 768:	2c f4       	brge	.+10     	; 0x774 <DIO_vidEnablePullUpRes+0x48>
 76a:	8b 81       	ldd	r24, Y+3	; 0x03
 76c:	9c 81       	ldd	r25, Y+4	; 0x04
 76e:	00 97       	sbiw	r24, 0x00	; 0
 770:	61 f0       	breq	.+24     	; 0x78a <DIO_vidEnablePullUpRes+0x5e>
 772:	5a c0       	rjmp	.+180    	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
 774:	2b 81       	ldd	r18, Y+3	; 0x03
 776:	3c 81       	ldd	r19, Y+4	; 0x04
 778:	22 30       	cpi	r18, 0x02	; 2
 77a:	31 05       	cpc	r19, r1
 77c:	71 f1       	breq	.+92     	; 0x7da <DIO_vidEnablePullUpRes+0xae>
 77e:	8b 81       	ldd	r24, Y+3	; 0x03
 780:	9c 81       	ldd	r25, Y+4	; 0x04
 782:	83 30       	cpi	r24, 0x03	; 3
 784:	91 05       	cpc	r25, r1
 786:	e9 f1       	breq	.+122    	; 0x802 <DIO_vidEnablePullUpRes+0xd6>
 788:	4f c0       	rjmp	.+158    	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
					{
						case PORTA:SET_BIT(PORTA_reg,u8PinId);
 78a:	ab e3       	ldi	r26, 0x3B	; 59
 78c:	b0 e0       	ldi	r27, 0x00	; 0
 78e:	eb e3       	ldi	r30, 0x3B	; 59
 790:	f0 e0       	ldi	r31, 0x00	; 0
 792:	80 81       	ld	r24, Z
 794:	48 2f       	mov	r20, r24
 796:	8a 81       	ldd	r24, Y+2	; 0x02
 798:	28 2f       	mov	r18, r24
 79a:	30 e0       	ldi	r19, 0x00	; 0
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	02 2e       	mov	r0, r18
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <DIO_vidEnablePullUpRes+0x7c>
 7a4:	88 0f       	add	r24, r24
 7a6:	99 1f       	adc	r25, r25
 7a8:	0a 94       	dec	r0
 7aa:	e2 f7       	brpl	.-8      	; 0x7a4 <DIO_vidEnablePullUpRes+0x78>
 7ac:	84 2b       	or	r24, r20
 7ae:	8c 93       	st	X, r24
 7b0:	3b c0       	rjmp	.+118    	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
						break;
						case PORTB:SET_BIT(PORTB_reg,u8PinId);
 7b2:	a8 e3       	ldi	r26, 0x38	; 56
 7b4:	b0 e0       	ldi	r27, 0x00	; 0
 7b6:	e8 e3       	ldi	r30, 0x38	; 56
 7b8:	f0 e0       	ldi	r31, 0x00	; 0
 7ba:	80 81       	ld	r24, Z
 7bc:	48 2f       	mov	r20, r24
 7be:	8a 81       	ldd	r24, Y+2	; 0x02
 7c0:	28 2f       	mov	r18, r24
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	81 e0       	ldi	r24, 0x01	; 1
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	02 2e       	mov	r0, r18
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <DIO_vidEnablePullUpRes+0xa4>
 7cc:	88 0f       	add	r24, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	0a 94       	dec	r0
 7d2:	e2 f7       	brpl	.-8      	; 0x7cc <DIO_vidEnablePullUpRes+0xa0>
 7d4:	84 2b       	or	r24, r20
 7d6:	8c 93       	st	X, r24
 7d8:	27 c0       	rjmp	.+78     	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
						break;
						case PORTC:SET_BIT(PORTC_reg,u8PinId);
 7da:	a5 e3       	ldi	r26, 0x35	; 53
 7dc:	b0 e0       	ldi	r27, 0x00	; 0
 7de:	e5 e3       	ldi	r30, 0x35	; 53
 7e0:	f0 e0       	ldi	r31, 0x00	; 0
 7e2:	80 81       	ld	r24, Z
 7e4:	48 2f       	mov	r20, r24
 7e6:	8a 81       	ldd	r24, Y+2	; 0x02
 7e8:	28 2f       	mov	r18, r24
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	02 2e       	mov	r0, r18
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <DIO_vidEnablePullUpRes+0xcc>
 7f4:	88 0f       	add	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	0a 94       	dec	r0
 7fa:	e2 f7       	brpl	.-8      	; 0x7f4 <DIO_vidEnablePullUpRes+0xc8>
 7fc:	84 2b       	or	r24, r20
 7fe:	8c 93       	st	X, r24
 800:	13 c0       	rjmp	.+38     	; 0x828 <DIO_vidEnablePullUpRes+0xfc>
						break;
						case PORTD:SET_BIT(PORTD_reg,u8PinId);
 802:	a2 e3       	ldi	r26, 0x32	; 50
 804:	b0 e0       	ldi	r27, 0x00	; 0
 806:	e2 e3       	ldi	r30, 0x32	; 50
 808:	f0 e0       	ldi	r31, 0x00	; 0
 80a:	80 81       	ld	r24, Z
 80c:	48 2f       	mov	r20, r24
 80e:	8a 81       	ldd	r24, Y+2	; 0x02
 810:	28 2f       	mov	r18, r24
 812:	30 e0       	ldi	r19, 0x00	; 0
 814:	81 e0       	ldi	r24, 0x01	; 1
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	02 2e       	mov	r0, r18
 81a:	02 c0       	rjmp	.+4      	; 0x820 <DIO_vidEnablePullUpRes+0xf4>
 81c:	88 0f       	add	r24, r24
 81e:	99 1f       	adc	r25, r25
 820:	0a 94       	dec	r0
 822:	e2 f7       	brpl	.-8      	; 0x81c <DIO_vidEnablePullUpRes+0xf0>
 824:	84 2b       	or	r24, r20
 826:	8c 93       	st	X, r24
						break;
					}
			}
}
 828:	0f 90       	pop	r0
 82a:	0f 90       	pop	r0
 82c:	0f 90       	pop	r0
 82e:	0f 90       	pop	r0
 830:	cf 91       	pop	r28
 832:	df 91       	pop	r29
 834:	08 95       	ret

00000836 <DIO_vidSetPortVal>:

void DIO_vidSetPortVal(u8 u8PortId,u8 u8Val)
{
 836:	df 93       	push	r29
 838:	cf 93       	push	r28
 83a:	00 d0       	rcall	.+0      	; 0x83c <DIO_vidSetPortVal+0x6>
 83c:	00 d0       	rcall	.+0      	; 0x83e <DIO_vidSetPortVal+0x8>
 83e:	cd b7       	in	r28, 0x3d	; 61
 840:	de b7       	in	r29, 0x3e	; 62
 842:	89 83       	std	Y+1, r24	; 0x01
 844:	6a 83       	std	Y+2, r22	; 0x02


		switch (u8PortId)
 846:	89 81       	ldd	r24, Y+1	; 0x01
 848:	28 2f       	mov	r18, r24
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	3c 83       	std	Y+4, r19	; 0x04
 84e:	2b 83       	std	Y+3, r18	; 0x03
 850:	8b 81       	ldd	r24, Y+3	; 0x03
 852:	9c 81       	ldd	r25, Y+4	; 0x04
 854:	81 30       	cpi	r24, 0x01	; 1
 856:	91 05       	cpc	r25, r1
 858:	d1 f0       	breq	.+52     	; 0x88e <__stack+0x2f>
 85a:	2b 81       	ldd	r18, Y+3	; 0x03
 85c:	3c 81       	ldd	r19, Y+4	; 0x04
 85e:	22 30       	cpi	r18, 0x02	; 2
 860:	31 05       	cpc	r19, r1
 862:	2c f4       	brge	.+10     	; 0x86e <__stack+0xf>
 864:	8b 81       	ldd	r24, Y+3	; 0x03
 866:	9c 81       	ldd	r25, Y+4	; 0x04
 868:	00 97       	sbiw	r24, 0x00	; 0
 86a:	61 f0       	breq	.+24     	; 0x884 <__stack+0x25>
 86c:	1e c0       	rjmp	.+60     	; 0x8aa <__stack+0x4b>
 86e:	2b 81       	ldd	r18, Y+3	; 0x03
 870:	3c 81       	ldd	r19, Y+4	; 0x04
 872:	22 30       	cpi	r18, 0x02	; 2
 874:	31 05       	cpc	r19, r1
 876:	81 f0       	breq	.+32     	; 0x898 <__stack+0x39>
 878:	8b 81       	ldd	r24, Y+3	; 0x03
 87a:	9c 81       	ldd	r25, Y+4	; 0x04
 87c:	83 30       	cpi	r24, 0x03	; 3
 87e:	91 05       	cpc	r25, r1
 880:	81 f0       	breq	.+32     	; 0x8a2 <__stack+0x43>
 882:	13 c0       	rjmp	.+38     	; 0x8aa <__stack+0x4b>
				{
					case PORTA:
						PORTA_reg=u8Val;
 884:	eb e3       	ldi	r30, 0x3B	; 59
 886:	f0 e0       	ldi	r31, 0x00	; 0
 888:	8a 81       	ldd	r24, Y+2	; 0x02
 88a:	80 83       	st	Z, r24
 88c:	0e c0       	rjmp	.+28     	; 0x8aa <__stack+0x4b>
					break;
					case PORTB:
						PORTB_reg=u8Val;
 88e:	e8 e3       	ldi	r30, 0x38	; 56
 890:	f0 e0       	ldi	r31, 0x00	; 0
 892:	8a 81       	ldd	r24, Y+2	; 0x02
 894:	80 83       	st	Z, r24
 896:	09 c0       	rjmp	.+18     	; 0x8aa <__stack+0x4b>
					break;
					case PORTC:
						PORTC_reg=u8Val;
 898:	e5 e3       	ldi	r30, 0x35	; 53
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	8a 81       	ldd	r24, Y+2	; 0x02
 89e:	80 83       	st	Z, r24
 8a0:	04 c0       	rjmp	.+8      	; 0x8aa <__stack+0x4b>
					break;
					case PORTD:
						PORTD_reg=u8Val;
 8a2:	e2 e3       	ldi	r30, 0x32	; 50
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	8a 81       	ldd	r24, Y+2	; 0x02
 8a8:	80 83       	st	Z, r24
					default: /*wrong POrtIdvalue*/
					  break;
				}


}
 8aa:	0f 90       	pop	r0
 8ac:	0f 90       	pop	r0
 8ae:	0f 90       	pop	r0
 8b0:	0f 90       	pop	r0
 8b2:	cf 91       	pop	r28
 8b4:	df 91       	pop	r29
 8b6:	08 95       	ret

000008b8 <DIO_vidSetPortDir>:

void DIO_vidSetPortDir(u8 u8PortId,u8 u8Dir)
{
 8b8:	df 93       	push	r29
 8ba:	cf 93       	push	r28
 8bc:	00 d0       	rcall	.+0      	; 0x8be <DIO_vidSetPortDir+0x6>
 8be:	00 d0       	rcall	.+0      	; 0x8c0 <DIO_vidSetPortDir+0x8>
 8c0:	cd b7       	in	r28, 0x3d	; 61
 8c2:	de b7       	in	r29, 0x3e	; 62
 8c4:	89 83       	std	Y+1, r24	; 0x01
 8c6:	6a 83       	std	Y+2, r22	; 0x02


			switch (u8PortId)
 8c8:	89 81       	ldd	r24, Y+1	; 0x01
 8ca:	28 2f       	mov	r18, r24
 8cc:	30 e0       	ldi	r19, 0x00	; 0
 8ce:	3c 83       	std	Y+4, r19	; 0x04
 8d0:	2b 83       	std	Y+3, r18	; 0x03
 8d2:	8b 81       	ldd	r24, Y+3	; 0x03
 8d4:	9c 81       	ldd	r25, Y+4	; 0x04
 8d6:	81 30       	cpi	r24, 0x01	; 1
 8d8:	91 05       	cpc	r25, r1
 8da:	d1 f0       	breq	.+52     	; 0x910 <DIO_vidSetPortDir+0x58>
 8dc:	2b 81       	ldd	r18, Y+3	; 0x03
 8de:	3c 81       	ldd	r19, Y+4	; 0x04
 8e0:	22 30       	cpi	r18, 0x02	; 2
 8e2:	31 05       	cpc	r19, r1
 8e4:	2c f4       	brge	.+10     	; 0x8f0 <DIO_vidSetPortDir+0x38>
 8e6:	8b 81       	ldd	r24, Y+3	; 0x03
 8e8:	9c 81       	ldd	r25, Y+4	; 0x04
 8ea:	00 97       	sbiw	r24, 0x00	; 0
 8ec:	61 f0       	breq	.+24     	; 0x906 <DIO_vidSetPortDir+0x4e>
 8ee:	1e c0       	rjmp	.+60     	; 0x92c <DIO_vidSetPortDir+0x74>
 8f0:	2b 81       	ldd	r18, Y+3	; 0x03
 8f2:	3c 81       	ldd	r19, Y+4	; 0x04
 8f4:	22 30       	cpi	r18, 0x02	; 2
 8f6:	31 05       	cpc	r19, r1
 8f8:	81 f0       	breq	.+32     	; 0x91a <DIO_vidSetPortDir+0x62>
 8fa:	8b 81       	ldd	r24, Y+3	; 0x03
 8fc:	9c 81       	ldd	r25, Y+4	; 0x04
 8fe:	83 30       	cpi	r24, 0x03	; 3
 900:	91 05       	cpc	r25, r1
 902:	81 f0       	breq	.+32     	; 0x924 <DIO_vidSetPortDir+0x6c>
 904:	13 c0       	rjmp	.+38     	; 0x92c <DIO_vidSetPortDir+0x74>
					{
						case PORTA:
							DDRA_reg=u8Dir;
 906:	ea e3       	ldi	r30, 0x3A	; 58
 908:	f0 e0       	ldi	r31, 0x00	; 0
 90a:	8a 81       	ldd	r24, Y+2	; 0x02
 90c:	80 83       	st	Z, r24
 90e:	0e c0       	rjmp	.+28     	; 0x92c <DIO_vidSetPortDir+0x74>
						break;
						case PORTB:
							DDRB_reg=u8Dir;
 910:	e7 e3       	ldi	r30, 0x37	; 55
 912:	f0 e0       	ldi	r31, 0x00	; 0
 914:	8a 81       	ldd	r24, Y+2	; 0x02
 916:	80 83       	st	Z, r24
 918:	09 c0       	rjmp	.+18     	; 0x92c <DIO_vidSetPortDir+0x74>
						break;
						case PORTC:
							DDRC_reg=u8Dir;
 91a:	e4 e3       	ldi	r30, 0x34	; 52
 91c:	f0 e0       	ldi	r31, 0x00	; 0
 91e:	8a 81       	ldd	r24, Y+2	; 0x02
 920:	80 83       	st	Z, r24
 922:	04 c0       	rjmp	.+8      	; 0x92c <DIO_vidSetPortDir+0x74>
						break;
						case PORTD:
							DDRD_reg=u8Dir;
 924:	e1 e3       	ldi	r30, 0x31	; 49
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	8a 81       	ldd	r24, Y+2	; 0x02
 92a:	80 83       	st	Z, r24
						default: /*wrong POrtIdvalue*/
							break;
					}


}
 92c:	0f 90       	pop	r0
 92e:	0f 90       	pop	r0
 930:	0f 90       	pop	r0
 932:	0f 90       	pop	r0
 934:	cf 91       	pop	r28
 936:	df 91       	pop	r29
 938:	08 95       	ret

0000093a <main>:
#include "ADC_INT.h"
#include "avr/delay.h"


void main()
{
 93a:	df 93       	push	r29
 93c:	cf 93       	push	r28
 93e:	00 d0       	rcall	.+0      	; 0x940 <main+0x6>
 940:	00 d0       	rcall	.+0      	; 0x942 <main+0x8>
 942:	cd b7       	in	r28, 0x3d	; 61
 944:	de b7       	in	r29, 0x3e	; 62
	u16 AD_Val,Volt_val;
	DIO_vidSetPinDir(PORTA,0,INPUT);
 946:	80 e0       	ldi	r24, 0x00	; 0
 948:	60 e0       	ldi	r22, 0x00	; 0
 94a:	40 e0       	ldi	r20, 0x00	; 0
 94c:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_vidSetPinDir>
	DIO_vidSetPinDir(PORTD,0,OUTPUT);
 950:	83 e0       	ldi	r24, 0x03	; 3
 952:	60 e0       	ldi	r22, 0x00	; 0
 954:	4f ef       	ldi	r20, 0xFF	; 255
 956:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_vidSetPinDir>
	DIO_vidSetPinDir(PORTD,1,OUTPUT);
 95a:	83 e0       	ldi	r24, 0x03	; 3
 95c:	61 e0       	ldi	r22, 0x01	; 1
 95e:	4f ef       	ldi	r20, 0xFF	; 255
 960:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_vidSetPinDir>
	DIO_vidSetPinDir(PORTD,2,OUTPUT);
 964:	83 e0       	ldi	r24, 0x03	; 3
 966:	62 e0       	ldi	r22, 0x02	; 2
 968:	4f ef       	ldi	r20, 0xFF	; 255
 96a:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_vidSetPinDir>
	ADC_VidInit();
 96e:	0e 94 36 00 	call	0x6c	; 0x6c <ADC_VidInit>
	while(1)
	{
		AD_Val=ADC_u16GetAdValue(AD_CHANNEL0);
 972:	80 e0       	ldi	r24, 0x00	; 0
 974:	0e 94 4a 00 	call	0x94	; 0x94 <ADC_u16GetAdValue>
 978:	9c 83       	std	Y+4, r25	; 0x04
 97a:	8b 83       	std	Y+3, r24	; 0x03
		Volt_val=(u16)(((u32)AD_Val*5000)/1024);
 97c:	8b 81       	ldd	r24, Y+3	; 0x03
 97e:	9c 81       	ldd	r25, Y+4	; 0x04
 980:	cc 01       	movw	r24, r24
 982:	a0 e0       	ldi	r26, 0x00	; 0
 984:	b0 e0       	ldi	r27, 0x00	; 0
 986:	28 e8       	ldi	r18, 0x88	; 136
 988:	33 e1       	ldi	r19, 0x13	; 19
 98a:	40 e0       	ldi	r20, 0x00	; 0
 98c:	50 e0       	ldi	r21, 0x00	; 0
 98e:	bc 01       	movw	r22, r24
 990:	cd 01       	movw	r24, r26
 992:	0e 94 14 05 	call	0xa28	; 0xa28 <__mulsi3>
 996:	dc 01       	movw	r26, r24
 998:	cb 01       	movw	r24, r22
 99a:	07 2e       	mov	r0, r23
 99c:	7a e0       	ldi	r23, 0x0A	; 10
 99e:	b6 95       	lsr	r27
 9a0:	a7 95       	ror	r26
 9a2:	97 95       	ror	r25
 9a4:	87 95       	ror	r24
 9a6:	7a 95       	dec	r23
 9a8:	d1 f7       	brne	.-12     	; 0x99e <main+0x64>
 9aa:	70 2d       	mov	r23, r0
 9ac:	9a 83       	std	Y+2, r25	; 0x02
 9ae:	89 83       	std	Y+1, r24	; 0x01
		if((Volt_val<=1500))
 9b0:	89 81       	ldd	r24, Y+1	; 0x01
 9b2:	9a 81       	ldd	r25, Y+2	; 0x02
 9b4:	25 e0       	ldi	r18, 0x05	; 5
 9b6:	8d 3d       	cpi	r24, 0xDD	; 221
 9b8:	92 07       	cpc	r25, r18
 9ba:	80 f4       	brcc	.+32     	; 0x9dc <main+0xa2>
		{
			DIO_vidSetPinVal(PORTD,0,HIGH);
 9bc:	83 e0       	ldi	r24, 0x03	; 3
 9be:	60 e0       	ldi	r22, 0x00	; 0
 9c0:	4f ef       	ldi	r20, 0xFF	; 255
 9c2:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>

			DIO_vidSetPinVal(PORTD,1,LOW);
 9c6:	83 e0       	ldi	r24, 0x03	; 3
 9c8:	61 e0       	ldi	r22, 0x01	; 1
 9ca:	40 e0       	ldi	r20, 0x00	; 0
 9cc:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
			DIO_vidSetPinVal(PORTD,2,LOW);
 9d0:	83 e0       	ldi	r24, 0x03	; 3
 9d2:	62 e0       	ldi	r22, 0x02	; 2
 9d4:	40 e0       	ldi	r20, 0x00	; 0
 9d6:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
 9da:	cb cf       	rjmp	.-106    	; 0x972 <main+0x38>

		}
		else if(Volt_val<=3000)
 9dc:	89 81       	ldd	r24, Y+1	; 0x01
 9de:	9a 81       	ldd	r25, Y+2	; 0x02
 9e0:	2b e0       	ldi	r18, 0x0B	; 11
 9e2:	89 3b       	cpi	r24, 0xB9	; 185
 9e4:	92 07       	cpc	r25, r18
 9e6:	80 f4       	brcc	.+32     	; 0xa08 <main+0xce>
		{
			DIO_vidSetPinVal(PORTD,0,LOW);
 9e8:	83 e0       	ldi	r24, 0x03	; 3
 9ea:	60 e0       	ldi	r22, 0x00	; 0
 9ec:	40 e0       	ldi	r20, 0x00	; 0
 9ee:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
			DIO_vidSetPinVal(PORTD,1,HIGH);
 9f2:	83 e0       	ldi	r24, 0x03	; 3
 9f4:	61 e0       	ldi	r22, 0x01	; 1
 9f6:	4f ef       	ldi	r20, 0xFF	; 255
 9f8:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
			DIO_vidSetPinVal(PORTD,2,LOW);
 9fc:	83 e0       	ldi	r24, 0x03	; 3
 9fe:	62 e0       	ldi	r22, 0x02	; 2
 a00:	40 e0       	ldi	r20, 0x00	; 0
 a02:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
 a06:	b5 cf       	rjmp	.-150    	; 0x972 <main+0x38>
		}
		else
		{
			DIO_vidSetPinVal(PORTD,0,LOW);
 a08:	83 e0       	ldi	r24, 0x03	; 3
 a0a:	60 e0       	ldi	r22, 0x00	; 0
 a0c:	40 e0       	ldi	r20, 0x00	; 0
 a0e:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
			DIO_vidSetPinVal(PORTD,1,LOW);
 a12:	83 e0       	ldi	r24, 0x03	; 3
 a14:	61 e0       	ldi	r22, 0x01	; 1
 a16:	40 e0       	ldi	r20, 0x00	; 0
 a18:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
			DIO_vidSetPinVal(PORTD,2,HIGH);
 a1c:	83 e0       	ldi	r24, 0x03	; 3
 a1e:	62 e0       	ldi	r22, 0x02	; 2
 a20:	4f ef       	ldi	r20, 0xFF	; 255
 a22:	0e 94 83 01 	call	0x306	; 0x306 <DIO_vidSetPinVal>
 a26:	a5 cf       	rjmp	.-182    	; 0x972 <main+0x38>

00000a28 <__mulsi3>:
 a28:	62 9f       	mul	r22, r18
 a2a:	d0 01       	movw	r26, r0
 a2c:	73 9f       	mul	r23, r19
 a2e:	f0 01       	movw	r30, r0
 a30:	82 9f       	mul	r24, r18
 a32:	e0 0d       	add	r30, r0
 a34:	f1 1d       	adc	r31, r1
 a36:	64 9f       	mul	r22, r20
 a38:	e0 0d       	add	r30, r0
 a3a:	f1 1d       	adc	r31, r1
 a3c:	92 9f       	mul	r25, r18
 a3e:	f0 0d       	add	r31, r0
 a40:	83 9f       	mul	r24, r19
 a42:	f0 0d       	add	r31, r0
 a44:	74 9f       	mul	r23, r20
 a46:	f0 0d       	add	r31, r0
 a48:	65 9f       	mul	r22, r21
 a4a:	f0 0d       	add	r31, r0
 a4c:	99 27       	eor	r25, r25
 a4e:	72 9f       	mul	r23, r18
 a50:	b0 0d       	add	r27, r0
 a52:	e1 1d       	adc	r30, r1
 a54:	f9 1f       	adc	r31, r25
 a56:	63 9f       	mul	r22, r19
 a58:	b0 0d       	add	r27, r0
 a5a:	e1 1d       	adc	r30, r1
 a5c:	f9 1f       	adc	r31, r25
 a5e:	bd 01       	movw	r22, r26
 a60:	cf 01       	movw	r24, r30
 a62:	11 24       	eor	r1, r1
 a64:	08 95       	ret

00000a66 <_exit>:
 a66:	f8 94       	cli

00000a68 <__stop_program>:
 a68:	ff cf       	rjmp	.-2      	; 0xa68 <__stop_program>
